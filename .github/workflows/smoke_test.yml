name: Resume Optimizer Smoke Test

on:
  schedule:
    - cron: '0 0 * * *'   # Daily at midnight UTC
  workflow_dispatch:

jobs:
  smoke_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies & package
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .
          pip install pytest jsonschema

      - name: Run smoke test
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          python - << 'EOF'
            import json, sys
            from resume_optimizer.optimizer import optimize_resume

            # (sample resume & JD omitted for brevity; paste your full strings here)
            resume = """..."""
            job_description = """..."""

            try:
                result_str = optimize_resume(resume, job_description)
                try:
                    result = json.loads(result_str)
                except json.JSONDecodeError as e:
                    print(f"ERROR: Invalid JSON returned: {e}")
                    sys.exit(1)

                required_keys = [
                    "summary", "skills_to_add", "skills_to_remove",
                    "experience_tweaks", "formatting_suggestions",
                    "collaboration_points"
                ]
                missing = [k for k in required_keys if k not in result]
                if missing:
                    print(f"ERROR: Missing keys in result: {missing}")
                    sys.exit(1)

                print("âœ… Smoke test successful!")
                print(f"Summary: {result['summary'][:100]}...")
                sys.exit(0)

            except Exception as e:
                print(f"ERROR: Smoke test failed with exception: {e}")
                sys.exit(1)
            EOF
